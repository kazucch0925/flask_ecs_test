openapi: 3.0.0
info:
  title: Todo API
  version: 1.0.0
paths:
  /todos:
    get:
      summary: Get all todos
      parameters:
        - in: query
          name: search
          schema:
            type: string
          required: false
          description: Search query to filter todos by task name
      responses:
        '200':
          description: A list of todos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo'
    post:
      summary: Create a new todo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
      responses:
        '201':
          description: Created
  /todos/{id}:
    put:
      summary: Update a todo by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The todo ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
      responses:
        '200':
          description: Updated
    delete:
      summary: Delete a todo by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The todo ID
      responses:
        '204':
          description: Deleted
  /register:
    post:
      summary: Register a new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Created
  /login:
    post:
      summary: Login a user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: OK
  /logout:
    post:
      summary: Logout a user
      responses:
        '200':
          description: OK
components:
  schemas:
    Todo:
      type: object
      properties:
        id:
          type: integer
        task:
          type: string
        created_at:
          type: string
          format: date-time
        priority:
          type: integer
          description: "Priority level (1: Low, 2: Medium, 3: High)"
        due_date:
          type: string
          format: date-time
          description: "Due date for the task"
        tags:
          type: string
          description: "Tags for the task (comma-separated)"
    User:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
          format: password
          description: "User's password (hashed)"
    Login:
      type: object
      properties:
        identifier:
          type: string
          description: "Username or email"
        password:
          type: string
          format: password
